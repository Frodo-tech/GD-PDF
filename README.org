#+TITLE: Godot Engine PDF Creation Module
#+AUTHOR: Franco Eus√©bio Garcia

* Information

This module allows Godot Engine to create PDF files using LibHARU. Its provides
an API to create PDF documents in the Godot Engine. It also offers bindings for
using the API in GDScript.

* Example

#+BEGIN_SRC godot-gdscript
var pdf = PDF.new()
pdf.create_document("/tmp/DejaVuSans.ttf", "/tmp/DejaVuSerif.ttf")

pdf.add_new_page()
pdf.add_title("Document Title")
pdf.add_header("My Header")
pdf.add_body_text("The quick brown fox jumps over the lazy dog.")

pdf.add_new_page()
pdf.add_title("Write 10 times...")
for i in range(10):
    pdf.add_body_text("The quick brown fox jumps over the lazy dog.")

pdf.save_document("/tmp/my_doc.pdf")
pdf.finish_document()
#+END_SRC

* Installation

Clone or extract this project into Godot's ~module~ directory. Then follow the
instructions to build LibHARU in your platform. It is important that the header
=libharu/include/hpdf_config.h= exists; otherwise, the compilation will fail.

For all platforms bellow, the steps assumes that LibHARU's source code is in
this modules' =libharu= directory. To speed Godot's compilation, it is
recommended to use the option =-j N=, to use =N= cores in the building process.

** Linux (X11)

In a shell, run:

#+BEGIN_SRC sh
git clone https://github.com/libharu/libharu libharu
cd libharu
./buildconf.sh
# The next step generates the hpdf_config.h file.
./configure
#+END_SRC

Then build Godot:

#+BEGIN_SRC sh
scons platform=x11
#+END_SRC

** Windows

First fetch the source code for LibHARU.

#+BEGIN_SRC sh
git clone https://github.com/libharu/libharu libharu
cd libharu
#+END_SRC

Then, to generate the configuration file, use Cmake.

- Source code directory: =path/to/libharu=.
- Destination directory: =path/to/libharu/win32=.

In the root directory, move =win32/include/hpdf_config.h= to
=include/hpdf_config.h=.

Then build Godot:

#+BEGIN_SRC sh
scons platform=windows
#+END_SRC

* Exporting Projects

Compile the export templates using the steps outlined in the wiki. See the
Compile section and pages in [[http://www.godotengine.org/projects/godot-engine/wiki/][Godot Engine - Documentation - OpenProject]] for more
information.

** Linux

- 32 bits:

#+BEGIN_SRC sh
scons platform=x11 tools=no target=release bits=32
scons platform=x11 tools=no target=release_debug bits=32
#+END_SRC

- 64 bits:

#+BEGIN_SRC sh
scons platform=x11 tools=no target=release bits=64
scons platform=x11 tools=no target=release_debug bits=64
#+END_SRC

Afterwards, move the resulting files to =/home/youruser/.godot/templates=, with
the followig names:

- =linux_x11_32_debug=;
- =linux_x11_32_release=;
- =linux_x11_64_debug=;
- =linux_x11_64_release=.

** Windows

- 32 bits:

#+BEGIN_SRC sh
scons platform=windows tools=no target=release bits=32
scons platform=windows tools=no target=release_debug bits=32
#+END_SRC

- 64 bits:

#+BEGIN_SRC sh
scons platform=windows tools=no target=release bits=64
scons platform=windows tools=no target=release_debug bits=64
#+END_SRC

Afterwards, move the resulting files to
=C:\USERS\YOURUSER\AppData\Roaming\Godot\Templates=, with the followig names:

- =windows_32_debug.exe=;
- =windows_32_release.exe=;
- =windows_64_debug.exe=;
- =windows_64_release.exe=.

* Issues

** TODO Error handler is currently undefined

LibHARU error handler function currently does nothing.

** TODO Forward LibHARU's return codes
